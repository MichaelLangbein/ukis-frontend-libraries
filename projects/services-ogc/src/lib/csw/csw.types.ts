/**
 * Types autogenerated with http://json2ts.com/
 */


export type CswVersion = '2.0.0' | '2.0.2';

export type ElementSetName = 'brief' | 'full' | 'summary';


export interface OwsKeywords {
    'ows:Keyword': string[];
    'ows:Type': string;
}

export interface OwsServiceIdentification {
    'ows:Title': string;
    'ows:Abstract': string;
    'ows:Keywords': OwsKeywords;
    'ows:ServiceType': string;
    'ows:ServiceTypeVersion': string[];
    'ows:Fees': string;
    'ows:AccessConstraints': string;
}

export interface OwsPhone {
    'ows:Voice': string;
    'ows:Facsimile': string;
}

export interface OwsAddress {
    'ows:DeliveryPoint': string;
    'ows:City': string;
    'ows:AdministrativeArea': string;
    'ows:PostalCode': number;
    'ows:Country': string;
    'ows:ElectronicMailAddress': string;
}

export interface OwsContactInfo {
    'ows:Phone': OwsPhone;
    'ows:Address': OwsAddress;
    'ows:OnlineResource': string;
    'ows:HoursOfService': string;
    'ows:ContactInstructions': string;
}

export interface OwsServiceContact {
    'ows:IndividualName': string;
    'ows:PositionName': string;
    'ows:ContactInfo': OwsContactInfo;
    'ows:Role': string;
}

export interface OwsServiceProvider {
    'ows:ProviderName': string;
    'ows:ProviderSite': string;
    'ows:ServiceContact': OwsServiceContact;
}

export interface OwsHTTP {
    'ows:Get': string;
    'ows:Post': string;
}

export interface OwsDCP {
    'ows:HTTP': OwsHTTP;
}

export interface OwsConstraint {
    'ows:Value': string[];
}

export interface OwsOperation {
    'ows:DCP': OwsDCP;
    'ows:Parameter': any;
    'ows:Constraint': OwsConstraint[];
}

export interface OwsParameter {
    'ows:Value': any;
}

export interface OwsConstraint2 {
    'ows:Value': any;
}

export interface InspireCommonResourceLocator {
    'inspire_common:URL': string;
    'inspire_common:MediaType': string;
}

export interface InspireCommonIntervalOfDates {
    'inspire_common:StartingDate': string;
    'inspire_common:EndDate': string;
}

export interface InspireCommonTemporalExtent {
    'inspire_common:IntervalOfDates': InspireCommonIntervalOfDates;
}

export interface InspireCommonTemporalReference {
    'inspire_common:TemporalExtent': InspireCommonTemporalExtent;
}

export interface InspireCommonResourceLocator2 {
    'inspire_common:URL': string;
    'inspire_common:MediaType': string;
}

export interface InspireCommonSpecification {
    'inspire_common:Title': string;
    'inspire_common:DateOfPublication': string;
    'inspire_common:URI': string;
    'inspire_common:ResourceLocator': InspireCommonResourceLocator2;
}

export interface InspireCommonConformity {
    'inspire_common:Specification': InspireCommonSpecification;
    'inspire_common:Degree': string;
}

export interface InspireCommonMetadataPointOfContact {
    'inspire_common:OrganisationName': string;
    'inspire_common:EmailAddress': string;
}

export interface InspireCommonMandatoryKeyword {
    'inspire_common:KeywordValue': string;
}

export interface InspireCommonOriginatingControlledVocabulary {
    'inspire_common:Title': string;
    'inspire_common:DateOfPublication': string;
}

export interface InspireCommonKeyword {
    'inspire_common:OriginatingControlledVocabulary': InspireCommonOriginatingControlledVocabulary;
    'inspire_common:KeywordValue': string;
}

export interface InspireCommonDefaultLanguage {
    'inspire_common:Language': string;
}

export interface InspireCommonSupportedLanguage {
    'inspire_common:Language': string;
}

export interface InspireCommonSupportedLanguages {
    'inspire_common:DefaultLanguage': InspireCommonDefaultLanguage;
    'inspire_common:SupportedLanguage': InspireCommonSupportedLanguage[];
}

export interface InspireCommonResponseLanguage {
    'inspire_common:Language': string;
}

export interface InspireDsExtendedCapabilities {
    'inspire_common:ResourceLocator': InspireCommonResourceLocator;
    'inspire_common:ResourceType': string;
    'inspire_common:TemporalReference': InspireCommonTemporalReference;
    'inspire_common:Conformity': InspireCommonConformity;
    'inspire_common:MetadataPointOfContact': InspireCommonMetadataPointOfContact;
    'inspire_common:MetadataDate': string;
    'inspire_common:SpatialDataServiceType': string;
    'inspire_common:MandatoryKeyword': InspireCommonMandatoryKeyword;
    'inspire_common:Keyword': InspireCommonKeyword;
    'inspire_common:SupportedLanguages': InspireCommonSupportedLanguages;
    'inspire_common:ResponseLanguage': InspireCommonResponseLanguage;
}

export interface OwsOperationsMetadata {
    'ows:Operation': OwsOperation[];
    'ows:Parameter': OwsParameter[];
    'ows:Constraint': OwsConstraint2[];
    'inspire_ds:ExtendedCapabilities': InspireDsExtendedCapabilities;
}

export interface OgcGeometryOperands {
    'ogc:GeometryOperand': string[];
}

export interface OgcSpatialOperators {
    'ogc:SpatialOperator': string[];
}

export interface OgcSpatialCapabilities {
    'ogc:GeometryOperands': OgcGeometryOperands;
    'ogc:SpatialOperators': OgcSpatialOperators;
}

export interface OgcComparisonOperators {
    'ogc:ComparisonOperator': string[];
}

export interface OgcFunctionNames {
    'ogc:FunctionName': string[];
}

export interface OgcFunctions {
    'ogc:FunctionNames': OgcFunctionNames;
}

export interface OgcArithmeticOperators {
    'ogc:Functions': OgcFunctions;
}

export interface OgcScalarCapabilities {
    'ogc:LogicalOperators': string;
    'ogc:ComparisonOperators': OgcComparisonOperators;
    'ogc:ArithmeticOperators': OgcArithmeticOperators;
}

export interface OgcIdCapabilities {
    'ogc:EID': string;
    'ogc:FID': string;
}

export interface OgcFilterCapabilities {
    'ogc:Spatial_Capabilities': OgcSpatialCapabilities;
    'ogc:Scalar_Capabilities': OgcScalarCapabilities;
    'ogc:Id_Capabilities': OgcIdCapabilities;
}

export interface CswCapabilities {
    'ows:ServiceIdentification': OwsServiceIdentification;
    'ows:ServiceProvider': OwsServiceProvider;
    'ows:OperationsMetadata': OwsOperationsMetadata;
    'ogc:Filter_Capabilities': OgcFilterCapabilities;
}




export interface XsAppinfo {
    'dc:identifier': string;
}

export interface XsAnnotation {
    'xs:appinfo': XsAppinfo;
    'xs:documentation': string;
}

export interface XsAnnotation2 {
    'xs:documentation': string;
}

export interface XsRestriction {
    'xs:enumeration': string[];
}

export interface XsSimpleType {
    'xs:annotation': XsAnnotation2;
    'xs:restriction': XsRestriction;
}

export interface XsSchema {
    'xs:annotation': XsAnnotation;
    'xs:import': any;
    'xs:element': string[];
    'xs:complexType': any[];
    'xs:include': any;
    'xs:simpleType': XsSimpleType;
}

export interface CswSchemaComponent {
    'xs:schema': XsSchema;
}

export interface CswDescribeRecordResponse {
    'csw:SchemaComponent': CswSchemaComponent[];
}


